---
- name: Deploy Docmost
  hosts: docmost_servers
  become: true
  vars:
    deployment_path: /opt/docmost
    environment: "{{ env | default('staging') }}"

  tasks:
    - name: Install required packages
      apt:
        name:
          - apt-transport-https
          - ca-certificates
          - curl
          - software-properties-common
          - python3-pip
        state: present
        update_cache: yes

    - name: Add Docker GPG key
      apt_key:
        url: https://download.docker.com/linux/ubuntu/gpg
        state: present

    - name: Add Docker repository
      apt_repository:
        repo: deb [arch=amd64] https://download.docker.com/linux/ubuntu {{ ansible_distribution_release }} stable
        state: present

    - name: Install Docker
      apt:
        name: docker-ce
        state: present
        update_cache: yes

    - name: Install Docker Compose
      pip:
        name: docker-compose
        state: present

    - name: Create Docmost directory
      file:
        path: "{{ deployment_path }}"
        state: directory
        mode: "0755"

    - name: Copy Docker Compose file
      template:
        src: docker-compose.yml.j2
        dest: "{{ deployment_path }}/docker-compose.yml"
      notify: reload systemd

    - name: Copy Nginx configuration
      template:
        src: nginx.conf.j2
        dest: "{{ deployment_path }}/nginx/nginx.conf"
      notify: reload nginx

    - name: Copy systemd service file
      template:
        src: docmost.service.j2
        dest: /etc/systemd/system/docmost.service
      notify: reload systemd

    - name: Template logrotate configuration
      template:
        src: docmost-logrotate.j2
        dest: /etc/logrotate.d/docmost
        owner: root
        group: root
        mode: "0644"
      notify: reload systemd

    - name: Ensure systemd is reloaded
      systemd:
        daemon_reload: yes

    - name: Start and enable Docmost service
      systemd:
        name: docmost
        state: started
        enabled: yes
        daemon_reload: yes

    - name: Add service status check
      command: systemctl is-active docmost
      register: service_status
      changed_when: false
      failed_when: service_status.rc != 0
      check_mode: no

    - name: Wait for services to be healthy
      uri:
        url: "http://localhost/health"
        return_content: yes
      register: health_check
      until: health_check.status == 200
      retries: 12
      delay: 5

    - name: Check individual Docmost instances
      uri:
        url: "http://localhost:3000/health"
        return_content: yes
      register: docmost_health
      until: docmost_health.status == 200
      retries: 12
      delay: 5
      loop:
        - docmost1
        - docmost2
        - docmost3
  handlers:
    - name: reload systemd
      systemd:
        daemon_reload: yes
