user nginx;
worker_processes auto;
pid /var/run/nginx.pid;

events {
    worker_connections {{ '512' if environment == 'staging' else '1024' }};
    multi_accept on;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    # Logging
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"';

    access_log /var/log/nginx/access.log main buffer=16k;
    error_log /var/log/nginx/error.log {{ 'warn' if environment == 'production' else 'debug' }};

    # Basic Settings
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;
    server_tokens off;

    # Gzip Settings
    gzip on;
    gzip_disable "msie6";
    gzip_vary on;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;

    # SSL Settings
    {% if ssl_enabled %}
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_prefer_server_ciphers on;
    ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;
    {% endif %}

    # Rate Limiting
    limit_req_zone $binary_remote_addr zone=one:{{ '10m' if environment == 'staging' else '100m' }} rate={{ '10r/s' if environment == 'staging' else '100r/s' }};

    # Upstream Configuration
    upstream docmost_backend {
        {% for i in range(docmost_instances) %}
        server docmost{{ i + 1 }}:3000 max_fails=3 fail_timeout=30s;
        {% endfor %}
        keepalive 32;
    }

    # Default Server Configuration
    server {
        listen 80 default_server;
        listen [::]:80 default_server;
        server_name {{ docmost_domain }};

        {% if ssl_enabled %}
        # Redirect all HTTP traffic to HTTPS
        return 301 https://$server_name$request_uri;
    }

    server {
        listen 443 ssl http2;
        listen [::]:443 ssl http2;
        server_name {{ docmost_domain }};

        ssl_certificate /etc/nginx/certs/{{ docmost_domain }}.crt;
        ssl_certificate_key /etc/nginx/certs/{{ docmost_domain }}.key;
        {% endif %}

        # Security Headers
        add_header X-Frame-Options "SAMEORIGIN" always;
        add_header X-XSS-Protection "1; mode=block" always;
        add_header X-Content-Type-Options "nosniff" always;
        add_header Referrer-Policy "no-referrer-when-downgrade" always;
        add_header Content-Security-Policy "default-src 'self' http: https: data: blob: 'unsafe-inline'" always;
        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;

        # Health Check Endpoint
        location /health {
            access_log off;
            add_header Content-Type text/plain;
            return 200 'healthy\n';
        }

        # API Rate Limiting
        location /api/ {
            limit_req zone=one burst=5 nodelay;
            proxy_pass http://docmost_backend;
        }

        # Main Location
        location / {
            proxy_pass http://docmost_backend;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_cache_bypass $http_upgrade;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            # Timeouts
            proxy_connect_timeout 60s;
            proxy_send_timeout 60s;
            proxy_read_timeout 60s;

            # WebSocket support
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
        }

        # Static File Caching
        location /static/ {
            expires 1y;
            add_header Cache-Control "public, no-transform";
            proxy_pass http://docmost_backend;
        }

        # Error Pages
        error_page 404 /404.html;
        error_page 500 502 503 504 /50x.html;
        location = /50x.html {
            root /usr/share/nginx/html;
        }
    }

    {% if monitoring_enabled %}
    # Prometheus Metrics
    server {
        listen 9113;
        location /metrics {
            stub_status on;
        }
    }
    {% endif %}
}
